CC_OBJ = sheet.o hstruct.o sdata.o intralayer_coupling.o interlayer_coupling.o spmatrix.o dmatrix.o mlmc_handler.o 
MPI_OBJ = main.o locality.o mpi_job_results.o job_params.o 

OBJS = $(CC_OBJ) $(MPI_OBJ)

CC_SRC = sheet.cpp hstruct.cpp sdata.cpp intralayer_coupling.cpp spmatrix.cpp dmatrix.cpp mlmc_handler.cpp
MPI_SRC = main.cpp locality.cpp mpi_job_results.cpp job_params.cpp
SRC_DIR = src
OUT_DIR = obj
EXECUTABLE = LEO2D
INSTALL_DIR = /home/stephen/bin

#DEBUG = -g -O0
DEBUG = 

PLATFORM = DEFAULT

# Block for Odyssey
ifeq ($(PLATFORM),ODYSSEY)
CC = g++
MPICC = mpicxx
MATFLAGS = -DUSE_MKL
LOCALFLAGS = -lmkl_rt -lpthread -liomp5
endif

# Block for VESTA/MIRA
ifeq ($(PLATFORM),ALCF)
CC = mpixlc_r
MPICC = mpixlcxx_r
MATFLAGS = 
LOCALFLAGS =
#LOCALFLAGS = -lmkl_rt -lpthread -liomp5 -L/soft/libraries/alcf/current/xl/LAPACK/lib -L/soft/libraries/alcf/current/xl/BLAS/lib -llapack -lblas
endif

# Generic Block
ifeq ($(PLATFORM),DEFAULT)
CC = g++
MPICC = mpicxx
MATFLAGS = -I/soft/eigen-eigen-67e894c6cd8f
LOCALFLAGS = -lfftw3 
endif


LFLAGS = $(LOCALFLAGS)

all: $(addprefix $(OUT_DIR)/,$(OBJS)) $(EXECUTABLE)

$(EXECUTABLE) : $(addprefix $(OUT_DIR)/,$(OBJS))
	$(MPICC)  $(addprefix $(OUT_DIR)/,$(OBJS)) -o $@ $(LFLAGS)
	
$(addprefix $(OUT_DIR)/,$(CC_OBJ)): COMP = $(CC)
$(addprefix $(OUT_DIR)/,$(MPI_OBJ)): COMP = $(MPICC)
$(addprefix $(OUT_DIR)/,$(OBJS)): TARGET = $@

$(addprefix $(OUT_DIR)/,$(OBJS)) : $(addprefix $(SRC_DIR)/,$(OBJS:.o=.cpp))
	$(COMP) $(MATFLAGS) $(DEBUG) -c $(addprefix $(SRC_DIR)/,$(notdir $(TARGET:.o=.cpp))) -o $@

.PHONY: clean


install:
	make all
	cp $(EXECUTABLE) $(INSTALL_DIR)/$(EXECUTABLE)


clean:
	rm -f  $(EXECUTABLE) obj/*.o


TEST_START ?= 1
TEST_END   ?= 3
test:
	@num=$(TEST_START); \
	while [ $$num -le $(TEST_END) ] ; do \
		cd tests && mpirun -n 2 ../LEO2D tblg_test$$num.in > /dev/null && \
		diff -q tblg_test$$num.cheb tblg_test$$num.test && \
		rm tblg_test$$num.cheb && cd .. && echo "test$$num exited with no errors."; \
		num=`expr $$num + 1`; \
	done; true

